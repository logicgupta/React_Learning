{"ast":null,"code":"var _jsxFileName = \"/home/logic/Desktop/React/react-complete-guide/src/containers/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport Styled from 'styled-components';\nimport Person from '../components/Persons/Person/Person';\nimport Persons from '../components/Persons/Persons'; // We use nomal css styling to Style the components in syled-component\n\nconst StyleButton = Styled.button`\n                background-color:${props => props.alt ? 'green' : 'red'};\n                color:white;\n                font:inherit;\n                border:2px solid blue;\n                padding:8px;\n                cursor:pointer;\n                &:hover{\n                      background-color:${props => props.alt ? 'salmon' : 'lightgreen'};\n                      color:black;\n                }\n          `;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'sssd1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'sssd2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'sssd3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      visible: false\n    };\n\n    this.switchNameHandler = userName => {\n      // console.log('Was clicked!');\n      // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n      this.setState({\n        persons: [{\n          id: 'sssd1',\n          name: userName,\n          age: 28\n        }, {\n          id: 'sssd2',\n          name: 'Manu',\n          age: 29\n        }, {\n          id: 'sssd3',\n          name: 'Stephanie',\n          age: 27\n        }]\n      });\n    };\n\n    this.onChangeListener = (event, index) => {\n      const personIndex = this.state.persons.findIndex(person => {\n        return person.id === index;\n      });\n      const person = this.state.persons[personIndex];\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.onToggleListener = () => {\n      const visible = this.state.visible;\n      this.setState({\n        visible: !visible\n      });\n    };\n\n    this.onDeleteListener = index => {\n      const person = this.state.persons;\n      person.splice(index, 1); //  Removes the element from the Array\n\n      this.setState({\n        persons: person\n      });\n      console.log('Hello', index);\n    };\n  }\n\n  render() {\n    let persons = null;\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n\n    if (this.state.persons.length < 1) {\n      classes.push('bold');\n    }\n\n    if (this.state.visible) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Persons, {\n        persons: this.state.persons,\n        click: this.onDeleteListener,\n        onChange: this.onChangeListener,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Hi, I'm a React App\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"This is really working!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"This is really working!\"), /*#__PURE__*/React.createElement(StyleButton, {\n      alt: this.state.visible,\n      onClick: this.onToggleListener,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Toggle Element\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App; //  Hooks      ------> useState\n// const App=(props)=>{\n//   const [personState,personSetState]=useState({\n//      persons: [\n//       { name: 'Max', age: 28 },\n//       { name: 'Manu', age: 29 },\n//       { name: 'Stephanie', age: 26 }\n//     ],\n//     otherState: 'some other value'\n//   });\n// const  switchNameHandler=()=>{\n//     personSetState({\n//       persons: [\n//               { name: 'Logic Gupta', age: 28 },\n//               { name: 'Manu', age: 29 },\n//               { name: 'Stephanie', age: 26 }\n//             ],\n//             otherState: 'some other value'\n//     });\n//   };\n//   return (\n//           <div className=\"App\">\n//             <h1>Hi, I'm a React App</h1>\n//             <p>This is really working!</p>\n//             <button onClick={switchNameHandler}>Switch Name</button>\n//             <Person\n//               name={personState.persons[0].name}\n//               age={personState.persons[0].age}\n//             />\n//             <Person\n//               name={personState.persons[1].name}\n//               age={personState.persons[1].age}\n//             >\n//               My Hobbies: Racing\n//             </Person>\n//             <Person\n//               name={personState.persons[2].name}\n//               age={personState.persons[2].age}\n//             />\n//           </div>\n//         );\n// }\n// export default App;","map":{"version":3,"sources":["/home/logic/Desktop/React/react-complete-guide/src/containers/App.js"],"names":["React","Component","useState","Styled","Person","Persons","StyleButton","button","props","alt","App","state","persons","id","name","age","otherState","visible","switchNameHandler","userName","setState","onChangeListener","event","index","personIndex","findIndex","person","target","value","onToggleListener","onDeleteListener","splice","console","log","render","classes","length","push","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB,C,CAEgB;;AACA,MAAMC,WAAW,GAACH,MAAM,CAACI,MAAO;mCACbC,KAAK,IAAEA,KAAK,CAACC,GAAN,GAAW,OAAX,GAAmB,KAAM;;;;;;;yCAO1BD,KAAK,IAAEA,KAAK,CAACC,GAAN,GAAW,QAAX,GAAoB,YAAa;;;WARjE;;AAgBhB,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAC,OAAL;AAAaC,QAAAA,IAAI,EAAE,KAAnB;AAA0BC,QAAAA,GAAG,EAAE;AAA/B,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAC,OAAL;AAAaC,QAAAA,IAAI,EAAE,MAAnB;AAA2BC,QAAAA,GAAG,EAAE;AAAhC,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAC,OAAL;AAAaC,QAAAA,IAAI,EAAE,WAAnB;AAAgCC,QAAAA,GAAG,EAAE;AAArC,OAHO,CADH;AAMNC,MAAAA,UAAU,EAAE,kBANN;AAONC,MAAAA,OAAO,EAAC;AAPF,KADkB;;AAAA,SAW1BC,iBAX0B,GAWLC,QAAD,IAAc;AAChC;AACA;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAE,CACP;AAACC,UAAAA,EAAE,EAAC,OAAJ;AAAaC,UAAAA,IAAI,EAAEK,QAAnB;AAA6BJ,UAAAA,GAAG,EAAE;AAAlC,SADO,EAEP;AAAEF,UAAAA,EAAE,EAAC,OAAL;AAAaC,UAAAA,IAAI,EAAE,MAAnB;AAA2BC,UAAAA,GAAG,EAAE;AAAhC,SAFO,EAGP;AAAEF,UAAAA,EAAE,EAAC,OAAL;AAAaC,UAAAA,IAAI,EAAE,WAAnB;AAAgCC,UAAAA,GAAG,EAAE;AAArC,SAHO;AADG,OAAd;AAOD,KArByB;;AAAA,SAuB1BM,gBAvB0B,GAuBT,CAACC,KAAD,EAAOC,KAAP,KAAe;AAE9B,YAAMC,WAAW,GAAC,KAAKb,KAAL,CAAWC,OAAX,CAAmBa,SAAnB,CAA8BC,MAAD,IAAU;AACvD,eAAOA,MAAM,CAACb,EAAP,KAAYU,KAAnB;AACD,OAFiB,CAAlB;AAIA,YAAMG,MAAM,GAAE,KAAKf,KAAL,CAAWC,OAAX,CAAmBY,WAAnB,CAAd;AACAE,MAAAA,MAAM,CAACZ,IAAP,GAAYQ,KAAK,CAACK,MAAN,CAAaC,KAAzB;AAEA,YAAMhB,OAAO,GAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAd;AACAA,MAAAA,OAAO,CAACY,WAAD,CAAP,GAAqBE,MAArB;AAEA,WAAKN,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAEA;AADG,OAAd;AAGD,KAtCyB;;AAAA,SAwC1BiB,gBAxC0B,GAwCT,MAAI;AACnB,YAAMZ,OAAO,GAAC,KAAKN,KAAL,CAAWM,OAAzB;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAC,CAACA;AADG,OAAd;AAGD,KA7CyB;;AAAA,SA+C1Ba,gBA/C0B,GA+CRP,KAAD,IAAS;AACzB,YAAMG,MAAM,GAAC,KAAKf,KAAL,CAAWC,OAAxB;AACGc,MAAAA,MAAM,CAACK,MAAP,CAAcR,KAAd,EAAoB,CAApB,EAFsB,CAEM;;AAC5B,WAAKH,QAAL,CAAc;AACZR,QAAAA,OAAO,EAACc;AADI,OAAd;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBV,KAApB;AACH,KAtDyB;AAAA;;AA2D1BW,EAAAA,MAAM,GAAG;AAIP,QAAItB,OAAO,GAAC,IAAZ;AAEA,UAAMuB,OAAO,GAAC,EAAd;;AACA,QAAG,KAAKxB,KAAL,CAAWC,OAAX,CAAmBwB,MAAnB,IAA2B,CAA9B,EAAgC;AAC5BD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb;AACH;;AACD,QAAG,KAAK1B,KAAL,CAAWC,OAAX,CAAmBwB,MAAnB,GAA0B,CAA7B,EAA+B;AAC7BD,MAAAA,OAAO,CAACE,IAAR,CAAa,MAAb;AACD;;AAGD,QAAG,KAAK1B,KAAL,CAAWM,OAAd,EAAsB;AACrBL,MAAAA,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,OAAD;AACA,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADpB;AAEA,QAAA,KAAK,EAAE,KAAKkB,gBAFZ;AAGA,QAAA,QAAQ,EAAE,KAAKT,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADD;AAWA;;AAKD,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAG,MAAA,SAAS,EAAEc,OAAO,CAACG,IAAR,CAAa,GAAb,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHF,eAIE,oBAAC,WAAD;AACA,MAAA,GAAG,EAAE,KAAK3B,KAAL,CAAWM,OADhB;AAEA,MAAA,OAAO,EAAE,KAAKY,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EASGjB,OATH,CAFF,CAhCO,CAgDP;AACD;;AA5GyB;;AA+G5B,eAAeF,GAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA","sourcesContent":["import React, { Component, useState } from 'react';\nimport './App.css';\nimport Styled from 'styled-components'\n\nimport Person from '../components/Persons/Person/Person'\nimport Persons from '../components/Persons/Persons'\n\n                // We use nomal css styling to Style the components in syled-component\n                const StyleButton=Styled.button`\n                background-color:${props=>props.alt ?'green':'red'};\n                color:white;\n                font:inherit;\n                border:2px solid blue;\n                padding:8px;\n                cursor:pointer;\n                &:hover{\n                      background-color:${props=>props.alt ?'salmon':'lightgreen'};\n                      color:black;\n                }\n          `;\n            \n\n\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id:'sssd1',name: 'Max', age: 28 },\n      { id:'sssd2',name: 'Manu', age: 29 },\n      { id:'sssd3',name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    visible:false\n  };\n\n  switchNameHandler = (userName) => {\n    // console.log('Was clicked!');\n    // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n    this.setState({\n      persons: [\n        {id:'sssd1', name: userName, age: 28 },\n        { id:'sssd2',name: 'Manu', age: 29 },\n        { id:'sssd3',name: 'Stephanie', age: 27 }\n      ]\n    });\n  };\n\n  onChangeListener=(event,index)=>{\n\n    const personIndex=this.state.persons.findIndex((person)=>{\n      return person.id===index;\n    })\n\n    const person =this.state.persons[personIndex];\n    person.name=event.target.value;\n\n    const persons=[...this.state.persons];\n    persons[personIndex]=person;\n\n    this.setState({\n      persons: persons\n    });\n  }\n\n  onToggleListener=()=>{\n    const visible=this.state.visible;\n    this.setState({\n      visible:!visible\n    })\n  }\n\n  onDeleteListener=(index)=>{\n   const person=this.state.persons;\n      person.splice(index,1);     //  Removes the element from the Array\n      this.setState({\n        persons:person\n      });\n      console.log('Hello',index);\n  }\n\n  \n\n\n  render() {\n    \n  \n\n    let persons=null\n\n    const classes=[]\n    if(this.state.persons.length<=2){\n        classes.push('red');\n    }\n    if(this.state.persons.length<1){\n      classes.push('bold');\n    }\n\n\n    if(this.state.visible){\n     persons=(\n      <div>\n      <Persons\n      persons={this.state.persons}\n      click={this.onDeleteListener}\n      onChange={this.onChangeListener}\n      >\n      </Persons>\n    </div>)\n   \n\n    }\n\n\n\n\n    return (\n      \n      <div className=\"App\">\n        <h1 >Hi, I'm a React App</h1>\n        <p className={classes.join(' ')}>This is really working!</p>\n        <p >This is really working!</p>\n        <StyleButton  \n        alt={this.state.visible}\n        onClick={this.onToggleListener}\n        >Toggle Element</StyleButton>\n       \n        {persons}\n\n      </div>\n     \n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n\n//  Hooks      ------> useState\n\n// const App=(props)=>{\n\n//   const [personState,personSetState]=useState({\n//      persons: [\n//       { name: 'Max', age: 28 },\n//       { name: 'Manu', age: 29 },\n//       { name: 'Stephanie', age: 26 }\n//     ],\n//     otherState: 'some other value'\n//   });\n\n\n// const  switchNameHandler=()=>{\n//     personSetState({\n//       persons: [\n//               { name: 'Logic Gupta', age: 28 },\n//               { name: 'Manu', age: 29 },\n//               { name: 'Stephanie', age: 26 }\n//             ],\n//             otherState: 'some other value'\n//     });\n//   };\n\n\n//   return (\n//           <div className=\"App\">\n//             <h1>Hi, I'm a React App</h1>\n//             <p>This is really working!</p>\n//             <button onClick={switchNameHandler}>Switch Name</button>\n//             <Person\n//               name={personState.persons[0].name}\n//               age={personState.persons[0].age}\n//             />\n//             <Person\n//               name={personState.persons[1].name}\n//               age={personState.persons[1].age}\n//             >\n//               My Hobbies: Racing\n//             </Person>\n//             <Person\n//               name={personState.persons[2].name}\n//               age={personState.persons[2].age}\n//             />\n//           </div>\n//         );\n\n\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}