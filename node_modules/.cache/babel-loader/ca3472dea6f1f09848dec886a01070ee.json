{"ast":null,"code":"var _jsxFileName = \"/home/logic/Desktop/React/react-complete-guide/src/containers/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport Styled from 'styled-components';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../Cockpit/Cockpit';\nimport withClass from '../hoc/WithClass';\nimport Aux from '../hoc/Aux';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../context/auth-context'; // We use nomal css styling to Style the components in syled-component\n\nconst StyleButton = Styled.button`\n                background-color:${props => props.alt ? 'green' : 'red'};\n                color:white;\n                font:inherit;\n                border:2px solid blue;\n                padding:8px;\n                cursor:pointer;\n                &:hover{\n                      background-color:${props => props.alt ? 'salmon' : 'lightgreen'};\n                      color:black;\n                }\n          `;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [{\n        id: 'sssd1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'sssd2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'sssd3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      visible: false,\n      stateCounter: 0,\n      authenticate: false\n    };\n\n    this.switchNameHandler = userName => {\n      // console.log('Was clicked!');\n      // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n      this.setState({\n        persons: [{\n          id: 'sssd1',\n          name: userName,\n          age: 28\n        }, {\n          id: 'sssd2',\n          name: 'Manu',\n          age: 29\n        }, {\n          id: 'sssd3',\n          name: 'Stephanie',\n          age: 27\n        }]\n      });\n    };\n\n    this.onChangeListener = (event, index) => {\n      const personIndex = this.state.persons.findIndex(person => {\n        return person.id === index;\n      });\n      const person = this.state.persons[personIndex];\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState((prevState, props) => {\n        return {\n          persons: persons,\n          stateCounter: prevState.stateCounter + 1\n        };\n      });\n    };\n\n    this.onToggleListener = () => {\n      const visible = this.state.visible;\n      this.setState({\n        visible: !visible\n      });\n    };\n\n    this.onDeleteListener = index => {\n      const person = this.state.persons;\n      person.splice(index, 1); //  Removes the element from the Array\n\n      this.setState({\n        persons: person\n      });\n      console.log('Hello', index);\n    };\n\n    this.authenticateHandler = () => {\n      this.setState({\n        authenticate: true\n      });\n    };\n\n    console.log(' [App.js] constructor');\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('  [App.js]  getDerivedStateFromProps');\n    return state;\n  }\n\n  componentDidMount() {\n    console.log(' [App.js ]   componentDIDMount');\n  }\n\n  shouldComponentUpdate(nextprops, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n    return true; // If we return false then all the other component will not update .\n    // i.e. The Toggle Button here will prevent from Display of the Per\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js]  componentDidUpdate ');\n  }\n\n  componentWillUnmount() {\n    console.log(' [App.js]  Clearing the App js');\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.visible) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Persons, {\n        persons: this.state.persons,\n        click: this.onDeleteListener,\n        onChange: this.onChangeListener,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        authenticated: this.state.authenticate,\n        login: this.authenticateHandler\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Cockpit, {\n      persons: this.state.persons,\n      visible: this.state.visible,\n      onToggleListener: this.onToggleListener,\n      authenticate: this.authenticateHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }), persons)); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nPersons.propTypes = {\n  persons: PropTypes.array,\n  click: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport default withClass(App, \"App\"); //  Hooks      ------> useState\n// const App=(props)=>{\n//   const [personState,personSetState]=useState({\n//      persons: [\n//       { name: 'Max', age: 28 },\n//       { name: 'Manu', age: 29 },\n//       { name: 'Stephanie', age: 26 }\n//     ],\n//     otherState: 'some other value'\n//   });\n// const  switchNameHandler=()=>{\n//     personSetState({\n//       persons: [\n//               { name: 'Logic Gupta', age: 28 },\n//               { name: 'Manu', age: 29 },\n//               { name: 'Stephanie', age: 26 }\n//             ],\n//             otherState: 'some other value'\n//     });\n//   };\n//   return (\n//           <div className=\"App\">\n//             <h1>Hi, I'm a React App</h1>\n//             <p>This is really working!</p>\n//             <button onClick={switchNameHandler}>Switch Name</button>\n//             <Person\n//               name={personState.persons[0].name}\n//               age={personState.persons[0].age}\n//             />\n//             <Person\n//               name={personState.persons[1].name}\n//               age={personState.persons[1].age}\n//             >\n//               My Hobbies: Racing\n//             </Person>\n//             <Person\n//               name={personState.persons[2].name}\n//               age={personState.persons[2].age}\n//             />\n//           </div>\n//         );\n// }\n// export default App;","map":{"version":3,"sources":["/home/logic/Desktop/React/react-complete-guide/src/containers/App.js"],"names":["React","Component","useState","Styled","Persons","Cockpit","withClass","Aux","PropTypes","AuthContext","StyleButton","button","props","alt","App","constructor","state","persons","id","name","age","otherState","visible","stateCounter","authenticate","switchNameHandler","userName","setState","onChangeListener","event","index","personIndex","findIndex","person","target","value","prevState","onToggleListener","onDeleteListener","splice","console","log","authenticateHandler","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","nextprops","nextState","componentDidUpdate","componentWillUnmount","render","authenticated","login","propTypes","array","click","func","onChange"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport './App.css';\nimport Styled from 'styled-components'\n\nimport Persons from '../components/Persons/Persons'\nimport Cockpit from '../Cockpit/Cockpit'\n\nimport withClass from '../hoc/WithClass'\n\nimport Aux from '../hoc/Aux'\n\nimport PropTypes from 'prop-types'\n\nimport AuthContext from'../context/auth-context'\n\n\n                // We use nomal css styling to Style the components in syled-component\n                const StyleButton=Styled.button`\n                background-color:${props=>props.alt ?'green':'red'};\n                color:white;\n                font:inherit;\n                border:2px solid blue;\n                padding:8px;\n                cursor:pointer;\n                &:hover{\n                      background-color:${props=>props.alt ?'salmon':'lightgreen'};\n                      color:black;\n                }\n          `;\n            \n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    console.log(' [App.js] constructor')\n  }\n\n  state = {\n    persons: [\n      { id:'sssd1',name: 'Max', age: 28 },\n      { id:'sssd2',name: 'Manu', age: 29 },\n      { id:'sssd3',name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    visible:false,\n    stateCounter:0,\n    authenticate:false\n  };\n\n\n  static getDerivedStateFromProps(props,state){\n\n    console.log('  [App.js]  getDerivedStateFromProps');\n    return state;\n\n  }\n\n\n  componentDidMount(){\n    console.log(' [App.js ]   componentDIDMount');\n  }\n\n\n \n\n  shouldComponentUpdate(nextprops,nextState){\n    console.log('[App.js] shouldComponentUpdate');\n    return true;          // If we return false then all the other component will not update .\n                          // i.e. The Toggle Button here will prevent from Display of the Per\n  }\n\n\n  componentDidUpdate(){\n\n    console.log('[App.js]  componentDidUpdate ');\n  }\n\n  componentWillUnmount(){\n    console.log(' [App.js]  Clearing the App js');\n  }\n\n\n\n  switchNameHandler = (userName) => {\n    // console.log('Was clicked!');\n    // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n    this.setState({\n      persons: [\n        {id:'sssd1', name: userName, age: 28 },\n        { id:'sssd2',name: 'Manu', age: 29 },\n        { id:'sssd3',name: 'Stephanie', age: 27 }\n      ]\n    });\n  };\n\n  onChangeListener=(event,index)=>{\n\n    const personIndex=this.state.persons.findIndex((person)=>{\n      return person.id===index;\n    })\n\n    const person =this.state.persons[personIndex];\n    person.name=event.target.value;\n\n    const persons=[...this.state.persons];\n    persons[personIndex]=person;\n\n    this.setState((prevState,props)=>\n    {\n     return{\n      persons: persons,\n      stateCounter:prevState.stateCounter+1\n     }\n    });\n  }\n\n  onToggleListener=()=>{\n    const visible=this.state.visible;\n    this.setState({\n      visible:!visible\n    })\n  }\n\n  onDeleteListener=(index)=>{\n   const person=this.state.persons;\n      person.splice(index,1);     //  Removes the element from the Array\n      this.setState({\n        persons:person\n      });\n      console.log('Hello',index);\n  }\n\n\n  authenticateHandler=()=>{\n    this.setState({\n      authenticate:true\n    });\n  }\n\n  \n\n\n  render() {\n    \n    let persons=null\n\n    if(this.state.visible){\n     persons=(\n      <div>\n      <Persons\n      persons={this.state.persons}\n      click={this.onDeleteListener}\n      onChange={this.onChangeListener}\n      >\n      </Persons>\n    </div>)\n   \n\n    }\n\n    return (\n      \n      <Aux>\n\n        <AuthContext.Provider  value={{authenticated:this.state.authenticate,\n        login:this.authenticateHandler}} >\n          \n        <Cockpit\n        persons={this.state.persons}\n        visible={this.state.visible}\n        onToggleListener={this.onToggleListener}\n        authenticate={this.authenticateHandler}\n        >\n        </Cockpit>\n\n        \n\n        {persons}\n        </AuthContext.Provider>\n\n      </Aux>\n     \n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\n\nPersons.propTypes={\n  persons:PropTypes.array,\n  click:PropTypes.func,\n  onChange:PropTypes.func\n}\n\n\n\nexport default withClass(App,\"App\");\n\n//  Hooks      ------> useState\n\n// const App=(props)=>{\n\n//   const [personState,personSetState]=useState({\n//      persons: [\n//       { name: 'Max', age: 28 },\n//       { name: 'Manu', age: 29 },\n//       { name: 'Stephanie', age: 26 }\n//     ],\n//     otherState: 'some other value'\n//   });\n\n\n// const  switchNameHandler=()=>{\n//     personSetState({\n//       persons: [\n//               { name: 'Logic Gupta', age: 28 },\n//               { name: 'Manu', age: 29 },\n//               { name: 'Stephanie', age: 26 }\n//             ],\n//             otherState: 'some other value'\n//     });\n//   };\n\n\n//   return (\n//           <div className=\"App\">\n//             <h1>Hi, I'm a React App</h1>\n//             <p>This is really working!</p>\n//             <button onClick={switchNameHandler}>Switch Name</button>\n//             <Person\n//               name={personState.persons[0].name}\n//               age={personState.persons[0].age}\n//             />\n//             <Person\n//               name={personState.persons[1].name}\n//               age={personState.persons[1].age}\n//             >\n//               My Hobbies: Racing\n//             </Person>\n//             <Person\n//               name={personState.persons[2].name}\n//               age={personState.persons[2].age}\n//             />\n//           </div>\n//         );\n\n\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}