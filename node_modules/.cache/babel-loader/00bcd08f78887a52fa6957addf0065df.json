{"ast":null,"code":"var _jsxFileName = \"/home/logic/Desktop/React/react-complete-guide/src/components/Persons/Person/Person.js\";\nimport React, { Component } from 'react'; // import Radium from 'radium' \n// import './Person.css'\n\nimport styled from 'styled-components';\nimport Aux from '../../../hoc/Aux';\nimport AuthContext from '../../../context/auth-context';\n\nclass Person extends Component {\n  constructor(props) {\n    super(props);\n    this.inputElementRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // this.inputElement.focus();\n    this.inputElementRef.current.focus();\n    console.log('Checking ...', this.context.authenticated);\n  }\n\n  render() {\n    const StyledDiv = styled.div`\n                width: 60%;\n                margin: 16px auto;\n                border: 2px solid #eeeeee;\n                box-shadow: 0px 2px 3px #cccccc;\n                padding: 16px;\n                text-align: center;\n\n                @media(min-width:400px){\n                    width:450px;\n                }\n\n    `; // Aux component and React.Fragment does the same so we can use anyone of them.\n    // I am using here Aux \n    // Technically we can use <React.Fragment> because it reduces our code.\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    },\n    /* <AuthContext.Consumer>\n    {(context)=>context.authenticated? <p>Authenticated!</p> :<p> Please Login</p>\n    }\n    </AuthContext.Consumer> */\n    this.context.authenticated ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 42\n      }\n    }, \"Authenticated!\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 65\n      }\n    }, \" Please Login\"), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.props.click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"My   Name    is \", this.props.name, \"    and Age \", this.props.age), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, this.props.children), /*#__PURE__*/React.createElement(\"input\", {\n      key: \"i3\",\n      type: \"text\" // ref={(inputEl)=>this.inputElement=inputEl}\n      ,\n      ref: this.inputElementRef,\n      onChange: this.props.onChangeListener,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nPerson.contextType = AuthContext;\nexport default Person;","map":{"version":3,"sources":["/home/logic/Desktop/React/react-complete-guide/src/components/Persons/Person/Person.js"],"names":["React","Component","styled","Aux","AuthContext","Person","constructor","props","inputElementRef","createRef","componentDidMount","current","focus","console","log","context","authenticated","render","StyledDiv","div","click","name","age","children","onChangeListener","contextType"],"mappings":";AAAA,OAAQA,KAAR,IAAiBC,SAAjB,QAAoC,OAApC,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAQC,MAAR,SAAuBJ,SAAvB,CAAgC;AAE5BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,eAAL,GAAqBR,KAAK,CAACS,SAAN,EAArB;AACH;;AAKDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKF,eAAL,CAAqBG,OAArB,CAA6BC,KAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKC,OAAL,CAAaC,aAAxC;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,SAAS,GAAChB,MAAM,CAACiB,GAAI;;;;;;;;;;;;KAA3B,CADI,CAcR;AACA;AACA;;AACA,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACK;;;;AAID,SAAKJ,OAAL,CAAaC,aAAb,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA7B,gBAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALxD,eASI;AAAG,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWa,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgD,KAAKb,KAAL,CAAWc,IAA3D,kBAA6E,KAAKd,KAAL,CAAWe,GAAxF,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKf,KAAL,CAAWgB,QAAf,CAVJ,eAWI;AACA,MAAA,GAAG,EAAC,IADJ;AAEA,MAAA,IAAI,EAAC,MAFL,CAGA;AAHA;AAIA,MAAA,GAAG,EAAE,KAAKf,eAJV;AAKA,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWiB,gBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAsBC;;AAxD2B;;AAAxBnB,M,CASGoB,W,GAAYrB,W;AAmDvB,eAAgBC,MAAhB","sourcesContent":["import  React , {Component} from    'react'\n// import Radium from 'radium' \n// import './Person.css'\nimport styled from 'styled-components'\n\nimport Aux from '../../../hoc/Aux'\n\nimport AuthContext from '../../../context/auth-context'\n\nclass   Person extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.inputElementRef=React.createRef();\n    }\n\n\n    static contextType=AuthContext;\n\n    componentDidMount(){\n        // this.inputElement.focus();\n        this.inputElementRef.current.focus();\n        console.log('Checking ...',this.context.authenticated);\n    }\n\n    render(){\n        const StyledDiv=styled.div`\n                width: 60%;\n                margin: 16px auto;\n                border: 2px solid #eeeeee;\n                box-shadow: 0px 2px 3px #cccccc;\n                padding: 16px;\n                text-align: center;\n\n                @media(min-width:400px){\n                    width:450px;\n                }\n\n    `;\n    // Aux component and React.Fragment does the same so we can use anyone of them.\n    // I am using here Aux \n    // Technically we can use <React.Fragment> because it reduces our code.\n    return (\n        <Aux  > \n            {/* <AuthContext.Consumer>\n            {(context)=>context.authenticated? <p>Authenticated!</p> :<p> Please Login</p>\n            }\n            </AuthContext.Consumer> */\n            this.context.authenticated ? <p>Authenticated!</p> :<p> Please Login</p>\n            \n            }\n           \n            <p onClick={this.props.click} >My   Name    is {this.props.name}    and Age {this.props.age}</p>\n            <p>{this.props.children}</p>\n            <input  \n            key=\"i3\"\n            type=\"text\"\n            // ref={(inputEl)=>this.inputElement=inputEl}\n            ref={this.inputElementRef}\n            onChange={this.props.onChangeListener}/>\n        </Aux>\n           \n       \n    )\n    }\n    }\n\n\nexport  default Person"]},"metadata":{},"sourceType":"module"}