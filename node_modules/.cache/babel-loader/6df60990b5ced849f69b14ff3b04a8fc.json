{"ast":null,"code":"var _jsxFileName = \"/home/logic/Desktop/React/react-complete-guide/src/Cockpit/Cockpit.js\";\nimport React, { useEffect, useRef } from 'react';\n\nconst cockpit = props => {\n  // Its showing Error\n  // useEffect(()=>{\n  //         console.log('[Cockpit.js]  useEffect');    // Error We are unable to use\n  // },[]);\n  // useEffect(()=>{\n  //     console.log('[Cockpit.js]  useEffect');    // Error We are unable to use\n  //     return()=>{\n  //         console.log('Clearing Work')\n  //     }\n  // });\n  const toggleRef = useRef(null);\n  const classes = [];\n\n  if (props.visible) {\n    classes.push('red');\n  }\n\n  if (props.persons.length <= 2) {\n    classes.push('red');\n  }\n\n  if (props.persons.length < 1) {\n    classes.push('bold');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Hi, I'm a React App\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"This is really working!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"This is really working!\"), /*#__PURE__*/React.createElement(\"button\", {\n    alt: props.visible,\n    onClick: props.onToggleListener,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Toggle Element\"));\n};\n\nexport default cockpit;","map":{"version":3,"sources":["/home/logic/Desktop/React/react-complete-guide/src/Cockpit/Cockpit.js"],"names":["React","useEffect","useRef","cockpit","props","toggleRef","classes","visible","push","persons","length","join","onToggleListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;;AAEA,MAAMC,OAAO,GAAEC,KAAD,IAAS;AAEnB;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,SAAS,GAACH,MAAM,CAAC,IAAD,CAAtB;AAGA,QAAMI,OAAO,GAAC,EAAd;;AAEA,MAAGF,KAAK,CAACG,OAAT,EAAiB;AACbD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb;AACH;;AAED,MAAGJ,KAAK,CAACK,OAAN,CAAcC,MAAd,IAAsB,CAAzB,EAA2B;AACvBJ,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb;AACH;;AACD,MAAGJ,KAAK,CAACK,OAAN,CAAcC,MAAd,GAAqB,CAAxB,EAA0B;AACxBJ,IAAAA,OAAO,CAACE,IAAR,CAAa,MAAb;AACD;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAG,IAAA,SAAS,EAAEF,OAAO,CAACK,IAAR,CAAa,GAAb,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,eAII;AACA,IAAA,GAAG,EAAEP,KAAK,CAACG,OADX;AAEA,IAAA,OAAO,EAAEH,KAAK,CAACQ,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADJ;AAWH,CA3CD;;AA6CA,eAAeT,OAAf","sourcesContent":["import React , {useEffect,useRef} from 'react'\n\nconst cockpit=(props)=>{\n\n    // Its showing Error\n\n    // useEffect(()=>{\n    //         console.log('[Cockpit.js]  useEffect');    // Error We are unable to use\n    // },[]);\n\n    // useEffect(()=>{\n    //     console.log('[Cockpit.js]  useEffect');    // Error We are unable to use\n\n    //     return()=>{\n    //         console.log('Clearing Work')\n    //     }\n    // });\n\n    const toggleRef=useRef(null);\n\n\n    const classes=[]\n\n    if(props.visible){\n        classes.push('red');\n    }\n\n    if(props.persons.length<=2){\n        classes.push('red');\n    }\n    if(props.persons.length<1){\n      classes.push('bold');\n    }\n\n    return(\n        <div>\n            <h1 >Hi, I'm a React App</h1>\n            <p className={classes.join(' ')}>This is really working!</p>\n            <p >This is really working!</p>\n            <button \n            alt={props.visible}\n            onClick={props.onToggleListener}\n            >Toggle Element</button>\n        </div>\n    )\n}\n\nexport default cockpit"]},"metadata":{},"sourceType":"module"}